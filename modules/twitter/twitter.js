// Generated by CoffeeScript 1.8.0
var $, OAuth, ab64, async, consumerSecret, consumer_key, exports, gui, lightbox, twitter_req;

exports = module.exports = {};

ab64 = 'QWJHZkNEOWJxWXBLcDBtYmtqTVF2QTJRWWxnWlZlUGNuZHcwMkxvOHBYSmdpVDk2WHk=';

consumer_key = '8CMdYgIYpDM6uknWRAfWEhGEj';

consumerSecret = new Buffer(ab64, 'base64').toString('utf8');

OAuth = require('oauth').OAuth;

twitter_req = require('twitter-request');

async = require('async');

$ = require('jquery');

gui = window.require('nw.gui');

lightbox = exports.destroy = function(boxContentId, session) {
  if (session.twitter[boxContentId].update_stream) {
    session.twitter[boxContentId].update_stream.removeAllListeners('data');
  }
  $(boxContentId).children('.trickle-twitter').remove();
  return delete session.twitter[boxContentId];
};

exports.init = function(content_id, config_id, session, api) {
  var authenticate, awaiting_config, createTweetStream, get_stream, oauth, print_tweets, streamBuffer;
  awaiting_config = false;
  if (!session.twitter) {
    session.twitter = {};
  }
  if (!session.twitter[content_id]) {
    session.twitter[content_id] = {};
  }
  oauth = new OAuth("https://api.twitter.com/oauth/request_token", "https://api.twitter.com/oauth/access_token", consumer_key, consumerSecret, "1.0", "oob", "HMAC-SHA1");
  authenticate = function(callback) {
    awaiting_config = true;
    $(config_id).html("<span class='btn'><span class='glyphicon glyphicon-refresh'></span> Initializing...</span>");
    return oauth.getOAuthRequestToken(function(error, user_token, user_secret, results) {
      var link, query_html, snipid;
      session.twitter.user_token = user_token;
      session.twitter.user_secret = user_secret;
      link = 'https://twitter.com/oauth/authenticate?oauth_token=' + user_token;
      snipid = config_id.slice(1);
      query_html = "<div class=\"form-group\">\n    <label>Please visit the following Link and enter the PIN.<br>\n    <a id=\"twitter-link-" + snipid + "\">Click me</a><br></label>\n    <input type=\"number\" class=\"form-control\" id=\"twitter-input-" + snipid + "\" placeholder=\"PIN\">\n</div>\n<button class=\"btn btn-default\" id=\"twitter-pin-" + snipid + "\">Submit</button>";
      $(config_id).html(query_html);
      $("#twitter-link-" + snipid).click(function() {
        return gui.Shell.openExternal(link);
      });
      return $("#twitter-pin-" + snipid).click(function() {
        var PIN;
        PIN = $("#twitter-input-" + snipid).val();
        $(config_id).html("<span class='btn'><span class='glyphicon glyphicon-refresh'></span> Validating PIN...</span>");
        return oauth.getOAuthAccessToken(user_token, user_secret, PIN, function(error, oauth_access_token, oauth_access_token_secret, results) {
          if (error) {
            $(config_id).html("<span class='btn'><span class='glyphicon glyphicon-remove'></span> An error occured.</span>");
            console.log(error);
            return awaiting_config = false;
          } else {
            $(config_id).html("<span class='btn'><span class='glyphicon glyphicon-refresh'></span> Loading Tweets...</span>");
            session.twitter.access_token = oauth_access_token;
            session.twitter.access_secret = oauth_access_token_secret;
            awaiting_config = false;
            return callback(null, oauth_access_token);
          }
        });
      });
    });
  };
  get_stream = function(callback) {
    var query, readyoauth, treq;
    $(config_id).html("<span class='btn'><span class='glyphicon glyphicon-ok'></span> Everything worked. You can close the config now.</span>");
    readyoauth = {
      consumer_key: consumer_key,
      consumer_secret: consumerSecret,
      token: session.twitter.access_token,
      token_secret: session.twitter.access_secret
    };
    treq = new twitter_req(readyoauth);
    if (!session.twitter[content_id].last_id) {
      session.twitter[content_id].last_id = 1;
    }
    query = {
      since_id: session.twitter[content_id].last_id,
      count: 100
    };
    return treq.request('statuses/home_timeline', {
      query: query
    }, function(err, res, body) {
      var result;
      if (err) {
        console.log("Error: " + err);
      } else {
        result = JSON.parse(body);
        if (result.length < 1) {
          callback("No new tweets");
        } else {
          callback(null, body);
        }
      }
      return createTweetStream();
    });
  };
  print_tweets = function(err, result) {
    var pic_height, tweet, tweet_entry, tweets, user_img, _i, _len, _ref, _results;
    if (err) {
      return console.log(err);
    } else {
      tweets = JSON.parse(result.tweets);
      if (tweets[tweets.length - 1]) {
        if (tweets[tweets.length - 1].id === session.twitter[content_id].last_id) {
          tweets.pop();
        }
      }
      if (tweets[0]) {
        session.twitter[content_id].last_id = Number(tweets[0].id);
      }
      try {
        _ref = tweets.reverse();
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          tweet = _ref[_i];
          user_img = tweet.user.profile_image_url;
          tweet_entry = "<div class=\"row trickle-twitter\" style=\"margin-bottom: 0.5em; margin-right: 0.5em;\">";
          if (tweet.retweeted_status) {
            tweet_entry += "<div class=\"col-md-2\"><img class=\"img-rounded \"src=\"" + tweet.retweeted_status.user.profile_image_url + "\" height=\"55\" width=\"55\"></div>";
            tweet_entry += "<div class=\"col-md-10\"><div class=\"row\"><div class=\"col-md-12\"><strong>" + tweet.retweeted_status.user.name + "</strong> <small>@" + tweet.retweeted_status.user.screen_name + " (retweeted by " + tweet.user.name + ")</small></div></div> ";
            tweet_entry += "<div class=\"row\"><div class=\"col-md-12\">" + tweet.retweeted_status.text + "</div></div>";
          } else {
            tweet_entry += "<div class=\"col-md-2\"><img class=\"img-rounded \"src=\"" + user_img + "\" height=\"55\" width=\"55\"></div>";
            tweet_entry += "<div class=\"col-md-10\"><div class=\"row\"><div class=\"col-md-12\"><strong>" + tweet.user.name + "</strong> <small>@" + tweet.user.screen_name + "</small></div></div> ";
            tweet_entry += "<div class=\"row\"><div class=\"col-md-12\">" + tweet.text + "</div></div>";
          }
          tweet_entry += "</div>";
          if (tweet.entities.media) {
            pic_height = tweet.entities.media[0].sizes.medium.h;
            if (pic_height > 300) {
              pic_height = (pic_height - 300) / 2;
            } else {
              pic_height = 0;
            }
            tweet_entry += "<div class=\"row\"> <div class=\"col-md-12\" style=\"text-align: center;\"> <span class=\"glyphicon glyphicon-asterisk\"></span> </div></div>";
            tweet_entry += "<div class=\"row\"> <div class=\"col-md-12\" style=\"width: 100%; height: 300px; overflow:hidden\"><img class=\"img-rounded img-responsive center-block twitter-image\" src=\"" + tweet.entities.media[0].media_url + "\" style=\"margin-top: -" + pic_height + "px;\"></div> </div>";
          }
          tweet_entry += "<div class=\"row\" style=\"margin-right: 0.5em;\">";
          tweet_entry += "<div class=\"col-md-12\" style=\"padding-top: 0.5em; padding-right: 0.5em; border-bottom: 1px solid #ccc;\"></div></div>";
          _results.push($(content_id).prepend(tweet_entry));
        }
        return _results;
      } catch (_error) {
        return console.log("Tweet unreadable (probably Limit exceeded)");
      }
    }
  };
  $(".twitter-image").click(function() {
    var content, src;
    console.log("Im inside the click event");
    src = $(this).prop('src');
    content = "<img src=\"" + src + "\"> ";
    return api.lightbox(content);
  });
  streamBuffer = "";
  createTweetStream = function() {
    var query, readyoauth, treq, update_stream;
    readyoauth = {
      consumer_key: consumer_key,
      consumer_secret: consumerSecret,
      token: session.twitter.access_token,
      token_secret: session.twitter.access_secret
    };
    treq = new twitter_req(readyoauth);
    query = {
      'with': 'followings'
    };
    update_stream = treq.request('user', {
      body: query
    });
    update_stream.on('data', function(data) {
      var end, result, tweet;
      end = data.toString().slice(-2);
      streamBuffer += data.toString();
      if (end === '\r\n') {
        try {
          tweet = JSON.parse(streamBuffer);
          if (tweet.text) {
            result = {
              tweets: "[" + streamBuffer + "]"
            };
            print_tweets(null, result);
          }
        } catch (_error) {}
        return streamBuffer = "";
      }
    });
    return session.twitter[content_id].update_stream = update_stream;
  };
  if (!session.twitter.access_token || !session.twitter.access_secret) {
    return async.series({
      auth: authenticate,
      tweets: get_stream
    }, print_tweets);
  } else {
    return async.series({
      tweets: get_stream
    }, print_tweets);
  }
};
